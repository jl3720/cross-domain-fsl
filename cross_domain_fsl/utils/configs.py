CLIP_DIM_MAPPING = {"ViT-B/32": 512, "ViT-B/16": 512, "ViT-L/14": 768, "RN50": 1024}
CLASS_NAMES_MAPPING = {
    "PACS": ["dog", "elephant", "giraffe", "guitar", "horse", "house", "person"],
    "OfficeHome": [
        "Drill",
        "Exit_Sign",
        "Bottle",
        "Glasses",
        "Computer",
        "File_Cabinet",
        "Shelf",
        "Toys",
        "Sink",
        "Laptop",
        "Kettle",
        "Folder",
        "Keyboard",
        "Flipflops",
        "Pencil",
        "Bed",
        "Hammer",
        "ToothBrush",
        "Couch",
        "Bike",
        "Postit_Notes",
        "Mug",
        "Webcam",
        "Desk_Lamp",
        "Telephone",
        "Helmet",
        "Mouse",
        "Pen",
        "Monitor",
        "Mop",
        "Sneakers",
        "Notebook",
        "Backpack",
        "Alarm_Clock",
        "Push_Pin",
        "Paper_Clip",
        "Batteries",
        "Radio",
        "Fan",
        "Ruler",
        "Pan",
        "Screwdriver",
        "Trash_Can",
        "Printer",
        "Speaker",
        "Eraser",
        "Bucket",
        "Chair",
        "Calendar",
        "Calculator",
        "Flowers",
        "Lamp_Shade",
        "Spoon",
        "Candles",
        "Clipboards",
        "Scissors",
        "TV",
        "Curtains",
        "Fork",
        "Soda",
        "Table",
        "Knives",
        "Oven",
        "Refrigerator",
        "Marker",
    ],
    # "VLCS": ["car", "person", "dog", "bird", "chair"],
    # must be in same order as in image_list
    "VLCS": ["bird", "car", "chair", "dog", "person"],
    "DomainNet": [
        "aircraft_carrier",
        "airplane",
        "alarm_clock",
        "ambulance",
        "angel",
        "animal_migration",
        "ant",
        "anvil",
        "apple",
        "arm",
        "asparagus",
        "axe",
        "backpack",
        "banana",
        "bandage",
        "barn",
        "baseball",
        "baseball_bat",
        "basket",
        "basketball",
        "bat",
        "bathtub",
        "beach",
        "bear",
        "beard",
        "bed",
        "bee",
        "belt",
        "bench",
        "bicycle",
        "binoculars",
        "bird",
        "birthday_cake",
        "blackberry",
        "blueberry",
        "book",
        "boomerang",
        "bottlecap",
        "bowtie",
        "bracelet",
        "brain",
        "bread",
        "bridge",
        "broccoli",
        "broom",
        "bucket",
        "bulldozer",
        "bus",
        "bush",
        "butterfly",
        "cactus",
        "cake",
        "calculator",
        "calendar",
        "camel",
        "camera",
        "camouflage",
        "campfire",
        "candle",
        "cannon",
        "canoe",
        "car",
        "carrot",
        "castle",
        "cat",
        "ceiling_fan",
        "cello",
        "cell_phone",
        "chair",
        "chandelier",
        "church",
        "circle",
        "clarinet",
        "clock",
        "cloud",
        "coffee_cup",
        "compass",
        "computer",
        "cookie",
        "cooler",
        "couch",
        "cow",
        "crab",
        "crayon",
        "crocodile",
        "crown",
        "cruise_ship",
        "cup",
        "diamond",
        "dishwasher",
        "diving_board",
        "dog",
        "dolphin",
        "donut",
        "door",
        "dragon",
        "dresser",
        "drill",
        "drums",
        "duck",
        "dumbbell",
        "ear",
        "elbow",
        "elephant",
        "envelope",
        "eraser",
        "eye",
        "eyeglasses",
        "face",
        "fan",
        "feather",
        "fence",
        "finger",
        "fire_hydrant",
        "fireplace",
        "firetruck",
        "fish",
        "flamingo",
        "flashlight",
        "flip_flops",
        "floor_lamp",
        "flower",
        "flying_saucer",
        "foot",
        "fork",
        "frog",
        "frying_pan",
        "garden",
        "garden_hose",
        "giraffe",
        "goatee",
        "golf_club",
        "grapes",
        "grass",
        "guitar",
        "hamburger",
        "hammer",
        "hand",
        "harp",
        "hat",
        "headphones",
        "hedgehog",
        "helicopter",
        "helmet",
        "hexagon",
        "hockey_puck",
        "hockey_stick",
        "horse",
        "hospital",
        "hot_air_balloon",
        "hot_dog",
        "hot_tub",
        "hourglass",
        "house",
        "house_plant",
        "hurricane",
        "ice_cream",
        "jacket",
        "jail",
        "kangaroo",
        "key",
        "keyboard",
        "knee",
        "knife",
        "ladder",
        "lantern",
        "laptop",
        "leaf",
        "leg",
        "light_bulb",
        "lighter",
        "lighthouse",
        "lightning",
        "line",
        "lion",
        "lipstick",
        "lobster",
        "lollipop",
        "mailbox",
        "map",
        "marker",
        "matches",
        "megaphone",
        "mermaid",
        "microphone",
        "microwave",
        "monkey",
        "moon",
        "mosquito",
        "motorbike",
        "mountain",
        "mouse",
        "moustache",
        "mouth",
        "mug",
        "mushroom",
        "nail",
        "necklace",
        "nose",
        "ocean",
        "octagon",
        "octopus",
        "onion",
        "oven",
        "owl",
        "paintbrush",
        "paint_can",
        "palm_tree",
        "panda",
        "pants",
        "paper_clip",
        "parachute",
        "parrot",
        "passport",
        "peanut",
        "pear",
        "peas",
        "pencil",
        "penguin",
        "piano",
        "pickup_truck",
        "picture_frame",
        "pig",
        "pillow",
        "pineapple",
        "pizza",
        "pliers",
        "police_car",
        "pond",
        "pool",
        "popsicle",
        "postcard",
        "potato",
        "power_outlet",
        "purse",
        "rabbit",
        "raccoon",
        "radio",
        "rain",
        "rainbow",
        "rake",
        "remote_control",
        "rhinoceros",
        "rifle",
        "river",
        "roller_coaster",
        "rollerskates",
        "sailboat",
        "sandwich",
        "saw",
        "saxophone",
        "school_bus",
        "scissors",
        "scorpion",
        "screwdriver",
        "sea_turtle",
        "see_saw",
        "shark",
        "sheep",
        "shoe",
        "shorts",
        "shovel",
        "sink",
        "skateboard",
        "skull",
        "skyscraper",
        "sleeping_bag",
        "smiley_face",
        "snail",
        "snake",
        "snorkel",
        "snowflake",
        "snowman",
        "soccer_ball",
        "sock",
        "speedboat",
        "spider",
        "spoon",
        "spreadsheet",
        "square",
        "squiggle",
        "squirrel",
        "stairs",
        "star",
        "steak",
        "stereo",
        "stethoscope",
        "stitches",
        "stop_sign",
        "stove",
        "strawberry",
        "streetlight",
        "string_bean",
        "submarine",
        "suitcase",
        "sun",
        "swan",
        "sweater",
        "swing_set",
        "sword",
        "syringe",
        "table",
        "teapot",
        "teddy-bear",
        "telephone",
        "television",
        "tennis_racquet",
        "tent",
        "The_Eiffel_Tower",
        "The_Great_Wall_of_China",
        "The_Mona_Lisa",
        "tiger",
        "toaster",
        "toe",
        "toilet",
        "tooth",
        "toothbrush",
        "toothpaste",
        "tornado",
        "tractor",
        "traffic_light",
        "train",
        "tree",
        "triangle",
        "trombone",
        "truck",
        "trumpet",
        "t-shirt",
        "umbrella",
        "underwear",
        "van",
        "vase",
        "violin",
        "washing_machine",
        "watermelon",
        "waterslide",
        "whale",
        "wheel",
        "windmill",
        "wine_bottle",
        "wine_glass",
        "wristwatch",
        "yoga",
        "zebra",
        "zigzag",
    ],
}
# N.B. Domain integer encoding is defined in `train_domain_classifier.generate_prompts()`
# Loops through the list stored in values below.

# Use full domain word to create prompts
DOMAINS_FULL = {
    "PACS": ["photo", "art", "cartoon", "sketch"],
    "OfficeHome": ["art", "clipart", "product", "real world"],
    # "VLCS": ["clipart", "infograph", "sketch", "painting"],
    "VLCS": ["VOCS2007", "LabelMe", "Caltech101", "SUN09"],
    "DomainNet": ["clipart", "infographic", "painting", "quickdraw", "real", "sketch"],
    "All": [
        "photo",
        "art",
        "cartoon",
        "sketch",
        "art",
        "clipart",
        "product",
        "real world",
        "clipart",
        "infograph",
        "sketch",
        "painting",
        "clipart",
        "infographic",
        "painting",
        "quickdraw",
        "real",
        "sketch",
    ],
}

# Abbreviations for domains needed for compatibility with tllib.vision.datasets
# DOMAINS_TO_ABBREV = {}
# for dataset, full_domains in DOMAINS_FULL.items():
#     DOMAINS_TO_ABBREV[dataset] = {full_domain: abbreviated_domain for full_domain, abbreviated_domain in zip(full_domains, DOMAINS[dataset])}
# print(DOMAINS_TO_ABBREV)
DOMAINS_TO_ABBREV = {
    "PACS": {"photo": "P", "art": "A", "cartoon": "C", "sketch": "S"},
    "OfficeHome": {"art": "Ar", "clipart": "Cl", "product": "Pr", "real world": "Rw"},
    # "VLCS": {"clipart": "C", "infograph": "L", "sketch": "S", "painting": "V"},
    "VLCS": {"Caltech101": "C", "LabelMe": "L", "SUN09": "S", "VOCS2007": "V"},
    "DomainNet": {
        "clipart": "c",
        "infographic": "i",
        "painting": "p",
        "quickdraw": "q",
        "real": "r",
        "sketch": "s",
    },
    "All": {
        "photo": "P",
        "art": "A",
        "cartoon": "C",
        "sketch": "S",
        "art": "Ar",
        "clipart": "Cl",
        "product": "Pr",
        "real world": "Rw",
        "clipart": "C",
        "infograph": "L",
        "sketch": "S",
        "painting": "V",
        "clipart": "c",
        "infographic": "i",
        "painting": "p",
        "quickdraw": "q",
        "real": "r",
        "sketch": "s",
    },
}


def gen_domain_int_enc() -> dict:
    """
    Returns:
        domain_encodings: dict[str, dict[str, int]]
        i.e.:
        {'PACS': {'P': 0, 'A': 1, ...}, 'OfficeHome': {...}, ...}
        DOMAINS[<dataset>][<domain>]
    """
    domain_encodings = {}
    for dataset in DOMAINS_FULL.keys():
        tmp_domains = {}
        for i, domain in enumerate(DOMAINS_FULL[dataset]):
            tmp_domains[domain] = i  # integer encode domains in order

        domain_encodings[dataset] = tmp_domains

    return domain_encodings


DOMAIN_ENCODINGS = gen_domain_int_enc()
# print(DOMAIN_ENCODINGS)
